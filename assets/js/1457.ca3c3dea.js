"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1457],{1457:(e,t,n)=>{n.d(t,{A:()=>ie});var i=n(4402),s=n(8277),o=n(1729),a=n(9777),r=n(2101),l=n(4411),c=n(6704),g=n(5597),f=n(3391);const h="uniform iconUniforms {\n  float sizeScale;\n  vec2 iconsTextureDim;\n  float sizeMinPixels;\n  float sizeMaxPixels;\n  bool billboard;\n  highp int sizeUnits;\n  float alphaCutoff;\n} icon;\n",d={name:"icon",vs:h,fs:h,uniformTypes:{sizeScale:"f32",iconsTextureDim:"vec2<f32>",sizeMinPixels:"f32",sizeMaxPixels:"f32",billboard:"f32",sizeUnits:"i32",alphaCutoff:"f32"}};var u=n(396);const p=()=>{},x={minFilter:"linear",mipmapFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},m={x:0,y:0,width:0,height:0};function v(e,t,n,i){const s=Math.min(n/t.width,i/t.height),o=Math.floor(t.width*s),a=Math.floor(t.height*s);return 1===s?{image:t,width:o,height:a}:(e.canvas.height=a,e.canvas.width=o,e.clearRect(0,0,o,a),e.drawImage(t,0,0,t.width,t.height,0,0,o,a),{image:e.canvas,width:o,height:a})}function y(e){return e&&(e.id||e.url)}function _(e,t,n){for(let i=0;i<t.length;i++){const{icon:s,xOffset:o}=t[i];e[y(s)]={...s,x:o,y:n}}}class C{constructor(e,{onUpdate:t=p,onError:n=p}){this._loadOptions=null,this._texture=null,this._externalTexture=null,this._mapping={},this._samplerParameters=null,this._pendingCount=0,this._autoPacking=!1,this._xOffset=0,this._yOffset=0,this._rowHeight=0,this._buffer=4,this._canvasWidth=1024,this._canvasHeight=0,this._canvas=null,this.device=e,this.onUpdate=t,this.onError=n}finalize(){this._texture?.delete()}getTexture(){return this._texture||this._externalTexture}getIconMapping(e){const t=this._autoPacking?y(e):e;return this._mapping[t]||m}setProps({loadOptions:e,autoPacking:t,iconAtlas:n,iconMapping:i,textureParameters:s}){e&&(this._loadOptions=e),void 0!==t&&(this._autoPacking=t),i&&(this._mapping=i),n&&(this._texture?.delete(),this._texture=null,this._externalTexture=n),s&&(this._samplerParameters=s)}get isLoaded(){return 0===this._pendingCount}packIcons(e,t){if(!this._autoPacking||"undefined"==typeof document)return;const n=Object.values(function(e,t,n){if(!e||!t)return null;n=n||{};const i={},{iterable:s,objectInfo:a}=(0,o.X)(e);for(const o of s){a.index++;const e=t(o,a),s=y(e);if(!e)throw new Error("Icon is missing.");if(!e.url)throw new Error("Icon url is missing.");i[s]||n[s]&&e.url===n[s].url||(i[s]={...e,source:o,sourceIndex:a.index})}return i}(e,t,this._mapping)||{});if(n.length>0){const{mapping:e,xOffset:t,yOffset:i,rowHeight:s,canvasHeight:o}=function({icons:e,buffer:t,mapping:n={},xOffset:i=0,yOffset:s=0,rowHeight:o=0,canvasWidth:a}){let r=[];for(let c=0;c<e.length;c++){const l=e[c];if(!n[y(l)]){const{height:e,width:c}=l;i+c+t>a&&(_(n,r,s),i=0,s=o+s+t,o=0,r=[]),r.push({icon:l,xOffset:i}),i=i+c+t,o=Math.max(o,e)}}return r.length>0&&_(n,r,s),{mapping:n,rowHeight:o,xOffset:i,yOffset:s,canvasWidth:a,canvasHeight:(l=o+s+t,Math.pow(2,Math.ceil(Math.log2(l))))};var l}({icons:n,buffer:this._buffer,canvasWidth:this._canvasWidth,mapping:this._mapping,rowHeight:this._rowHeight,xOffset:this._xOffset,yOffset:this._yOffset});this._rowHeight=s,this._mapping=e,this._xOffset=t,this._yOffset=i,this._canvasHeight=o,this._texture||(this._texture=this.device.createTexture({format:"rgba8unorm",width:this._canvasWidth,height:this._canvasHeight,sampler:this._samplerParameters||x,mipmaps:!0})),this._texture.height!==this._canvasHeight&&(this._texture=function(e,t,n,i){const{width:s,height:o,device:a}=e,r=a.createTexture({format:"rgba8unorm",width:t,height:n,sampler:i,mipmaps:!0}),l=a.createCommandEncoder();return l.copyTextureToTexture({sourceTexture:e,destinationTexture:r,width:s,height:o}),l.finish(),e.destroy(),r}(this._texture,this._canvasWidth,this._canvasHeight,this._samplerParameters||x)),this.onUpdate(),this._canvas=this._canvas||document.createElement("canvas"),this._loadIcons(n)}}_loadIcons(e){const t=this._canvas.getContext("2d",{willReadFrequently:!0});for(const n of e)this._pendingCount++,(0,u.H)(n.url,this._loadOptions).then((e=>{const i=y(n),s=this._mapping[i],{x:o,y:a,width:r,height:l}=s,{image:c,width:g,height:f}=v(t,e,r,l);this._texture?.copyExternalImage({image:c,x:o+(r-g)/2,y:a+(l-f)/2,width:g,height:f}),s.width=g,s.height=f,this._texture.generateMipmap(),this.onUpdate()})).catch((e=>{this.onError({url:n.url,source:n.source,sourceIndex:n.sourceIndex,loadOptions:this._loadOptions,error:e})})).finally((()=>{this._pendingCount--}))}}const P=[0,0,0,255],z={iconAtlas:{type:"image",value:null,async:!0},iconMapping:{type:"object",value:{},async:!0},sizeScale:{type:"number",value:1,min:0},billboard:!0,sizeUnits:"pixels",sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},alphaCutoff:{type:"number",value:.05,min:0,max:1},getPosition:{type:"accessor",value:e=>e.position},getIcon:{type:"accessor",value:e=>e.icon},getColor:{type:"accessor",value:P},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},onIconError:{type:"function",value:null,optional:!0},textureParameters:{type:"object",ignore:!0,value:null}};class b extends a.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME icon-layer-vertex-shader\nin vec2 positions;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin float instanceSizes;\nin float instanceAngles;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin vec4 instanceIconFrames;\nin float instanceColorModes;\nin vec2 instanceOffsets;\nin vec2 instancePixelOffset;\nout float vColorMode;\nout vec4 vColor;\nout vec2 vTextureCoords;\nout vec2 uv;\nvec2 rotate_by_angle(vec2 vertex, float angle) {\nfloat angle_radian = angle * PI / 180.0;\nfloat cos_angle = cos(angle_radian);\nfloat sin_angle = sin(angle_radian);\nmat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\nreturn rotationMatrix * vertex;\n}\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\ngeometry.uv = positions;\ngeometry.pickingColor = instancePickingColors;\nuv = positions;\nvec2 iconSize = instanceIconFrames.zw;\nfloat sizePixels = clamp(\nproject_size_to_pixel(instanceSizes * icon.sizeScale, icon.sizeUnits),\nicon.sizeMinPixels, icon.sizeMaxPixels\n);\nfloat instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\nvec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\npixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\npixelOffset += instancePixelOffset;\npixelOffset.y *= -1.0;\nif (icon.billboard)  {\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvec3 offset = vec3(pixelOffset, 0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n} else {\nvec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\nDECKGL_FILTER_SIZE(offset_common, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nvTextureCoords = mix(\ninstanceIconFrames.xy,\ninstanceIconFrames.xy + iconSize,\n(positions.xy + 1.0) / 2.0\n) / icon.iconsTextureDim;\nvColor = instanceColors;\nDECKGL_FILTER_COLOR(vColor, geometry);\nvColorMode = instanceColorModes;\n}\n",fs:"#version 300 es\n#define SHADER_NAME icon-layer-fragment-shader\nprecision highp float;\nuniform sampler2D iconsTexture;\nin float vColorMode;\nin vec4 vColor;\nin vec2 vTextureCoords;\nin vec2 uv;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = uv;\nvec4 texColor = texture(iconsTexture, vTextureCoords);\nvec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\nfloat a = texColor.a * layer.opacity * vColor.a;\nif (a < icon.alphaCutoff) {\ndiscard;\n}\nfragColor = vec4(color, a);\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[r.A,l.A,d]})}initializeState(){this.state={iconManager:new C(this.context.device,{onUpdate:this._onUpdate.bind(this),onError:this._onError.bind(this)})};this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceOffsets:{size:2,accessor:"getIcon",transform:this.getInstanceOffset},instanceIconFrames:{size:4,accessor:"getIcon",transform:this.getInstanceIconFrame},instanceColorModes:{size:1,type:"uint8",accessor:"getIcon",transform:this.getInstanceColorMode},instanceColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getColor",defaultValue:P},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instancePixelOffset:{size:2,transition:!0,accessor:"getPixelOffset"}})}updateState(e){super.updateState(e);const{props:t,oldProps:n,changeFlags:i}=e,s=this.getAttributeManager(),{iconAtlas:o,iconMapping:a,data:r,getIcon:l,textureParameters:c}=t,{iconManager:g}=this.state;if("string"==typeof o)return;const f=o||this.internalState.isAsyncPropLoading("iconAtlas");g.setProps({loadOptions:t.loadOptions,autoPacking:!f,iconAtlas:o,iconMapping:f?a:null,textureParameters:c}),f?n.iconMapping!==t.iconMapping&&s.invalidate("getIcon"):(i.dataChanged||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getIcon))&&g.packIcons(r,l),i.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),s.invalidateAll())}get isLoaded(){return super.isLoaded&&this.state.iconManager.isLoaded}finalizeState(e){super.finalizeState(e),this.state.iconManager.finalize()}draw({uniforms:e}){const{sizeScale:t,sizeMinPixels:n,sizeMaxPixels:i,sizeUnits:s,billboard:o,alphaCutoff:a}=this.props,{iconManager:r}=this.state,l=r.getTexture();if(l){const e=this.state.model,r={iconsTexture:l,iconsTextureDim:[l.width,l.height],sizeUnits:c.p5[s],sizeScale:t,sizeMinPixels:n,sizeMaxPixels:i,billboard:o,alphaCutoff:a};e.shaderInputs.setProps({icon:r}),e.draw(this.context.renderPass)}}_getModel(){return new g.K(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new f.V({topology:"triangle-strip",attributes:{positions:{size:2,value:new Float32Array([-1,-1,1,-1,-1,1,1,1])}}}),isInstanced:!0})}_onUpdate(){this.setNeedsRedraw()}_onError(e){const t=this.getCurrentLayer()?.props.onIconError;t?t(e):s.A.error(e.error.message)()}getInstanceOffset(e){const{width:t,height:n,anchorX:i=t/2,anchorY:s=n/2}=this.state.iconManager.getIconMapping(e);return[t/2-i,n/2-s]}getInstanceColorMode(e){return this.state.iconManager.getIconMapping(e).mask?1:0}getInstanceIconFrame(e){const{x:t,y:n,width:i,height:s}=this.state.iconManager.getIconMapping(e);return[t,n,i,s]}}b.defaultProps=z,b.layerName="IconLayer";const S=b,M="uniform sdfUniforms {\n  float gamma;\n  bool enabled;\n  float buffer;\n  float outlineBuffer;\n  vec4 outlineColor;\n} sdf;\n",O={name:"sdf",vs:M,fs:M,uniformTypes:{gamma:"f32",enabled:"f32",buffer:"f32",outlineBuffer:"f32",outlineColor:"vec4<f32>"}},w=.75,A=[];class I extends S{getShaders(){const e=super.getShaders();return{...e,modules:[...e.modules,O],fs:"#version 300 es\n#define SHADER_NAME multi-icon-layer-fragment-shader\nprecision highp float;\nuniform sampler2D iconsTexture;\nin vec4 vColor;\nin vec2 vTextureCoords;\nin vec2 uv;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = uv;\nif (!bool(picking.isActive)) {\nfloat alpha = texture(iconsTexture, vTextureCoords).a;\nvec4 color = vColor;\nif (sdf.enabled) {\nfloat distance = alpha;\nalpha = smoothstep(sdf.buffer - sdf.gamma, sdf.buffer + sdf.gamma, distance);\nif (sdf.outlineBuffer > 0.0) {\nfloat inFill = alpha;\nfloat inBorder = smoothstep(sdf.outlineBuffer - sdf.gamma, sdf.outlineBuffer + sdf.gamma, distance);\ncolor = mix(sdf.outlineColor, vColor, inFill);\nalpha = inBorder;\n}\n}\nfloat a = alpha * color.a;\nif (a < icon.alphaCutoff) {\ndiscard;\n}\nfragColor = vec4(color.rgb, a * layer.opacity);\n}\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n"}}initializeState(){super.initializeState();this.getAttributeManager().addInstanced({instanceOffsets:{size:2,accessor:"getIconOffsets"},instancePickingColors:{type:"uint8",size:3,accessor:(e,{index:t,target:n})=>this.encodePickingColor(t,n)}})}updateState(e){super.updateState(e);const{props:t,oldProps:n}=e;let{outlineColor:i}=t;i!==n.outlineColor&&(i=i.map((e=>e/255)),i[3]=Number.isFinite(i[3])?i[3]:1,this.setState({outlineColor:i})),!t.sdf&&t.outlineWidth&&s.A.warn(`${this.id}: fontSettings.sdf is required to render outline`)()}draw(e){const{sdf:t,smoothing:n,outlineWidth:i}=this.props,{outlineColor:s}=this.state,o=i?Math.max(n,w*(1-i)):-1,a=this.state.model,r={buffer:w,outlineBuffer:o,gamma:n,enabled:Boolean(t),outlineColor:s};if(a.shaderInputs.setProps({sdf:r}),super.draw(e),t&&i){const{iconManager:e}=this.state;e.getTexture()&&(a.shaderInputs.setProps({sdf:{...r,outlineBuffer:w}}),a.draw(this.context.renderPass))}}getInstanceOffset(e){return e?Array.from(e).flatMap((e=>super.getInstanceOffset(e))):A}getInstanceColorMode(e){return 1}getInstanceIconFrame(e){return e?Array.from(e).flatMap((e=>super.getInstanceIconFrame(e))):A}}I.defaultProps={getIconOffsets:{type:"accessor",value:e=>e.offsets},alphaCutoff:.001,smoothing:.1,outlineWidth:0,outlineColor:{type:"color",value:[0,0,0,255]}},I.layerName="MultiIconLayer";const L=I,T=1e20;class F{constructor({fontSize:e=24,buffer:t=3,radius:n=8,cutoff:i=.25,fontFamily:s="sans-serif",fontWeight:o="normal",fontStyle:a="normal"}={}){this.buffer=t,this.cutoff=i,this.radius=n;const r=this.size=e+4*t,l=this._createCanvas(r),c=this.ctx=l.getContext("2d",{willReadFrequently:!0});c.font=`${a} ${o} ${e}px ${s}`,c.textBaseline="alphabetic",c.textAlign="left",c.fillStyle="black",this.gridOuter=new Float64Array(r*r),this.gridInner=new Float64Array(r*r),this.f=new Float64Array(r),this.z=new Float64Array(r+1),this.v=new Uint16Array(r)}_createCanvas(e){const t=document.createElement("canvas");return t.width=t.height=e,t}draw(e){const{width:t,actualBoundingBoxAscent:n,actualBoundingBoxDescent:i,actualBoundingBoxLeft:s,actualBoundingBoxRight:o}=this.ctx.measureText(e),a=Math.ceil(n),r=Math.max(0,Math.min(this.size-this.buffer,Math.ceil(o-s))),l=Math.min(this.size-this.buffer,a+Math.ceil(i)),c=r+2*this.buffer,g=l+2*this.buffer,f=Math.max(c*g,0),h=new Uint8ClampedArray(f),d={data:h,width:c,height:g,glyphWidth:r,glyphHeight:l,glyphTop:a,glyphLeft:0,glyphAdvance:t};if(0===r||0===l)return d;const{ctx:u,buffer:p,gridInner:x,gridOuter:m}=this;u.clearRect(p,p,r,l),u.fillText(e,p,p+a);const v=u.getImageData(p,p,r,l);m.fill(T,0,f),x.fill(0,0,f);for(let y=0;y<l;y++)for(let e=0;e<r;e++){const t=v.data[4*(y*r+e)+3]/255;if(0===t)continue;const n=(y+p)*c+e+p;if(1===t)m[n]=0,x[n]=T;else{const e=.5-t;m[n]=e>0?e*e:0,x[n]=e<0?e*e:0}}E(m,0,0,c,g,c,this.f,this.v,this.z),E(x,p,p,r,l,c,this.f,this.v,this.z);for(let y=0;y<f;y++){const e=Math.sqrt(m[y])-Math.sqrt(x[y]);h[y]=Math.round(255-255*(e/this.radius+this.cutoff))}return d}}function E(e,t,n,i,s,o,a,r,l){for(let c=t;c<t+i;c++)k(e,n*o+c,o,s,a,r,l);for(let c=n;c<n+s;c++)k(e,c*o+t,1,i,a,r,l)}function k(e,t,n,i,s,o,a){o[0]=0,a[0]=-T,a[1]=T,s[0]=e[t];for(let r=1,l=0,c=0;r<i;r++){s[r]=e[t+r*n];const i=r*r;do{const e=o[l];c=(s[r]-s[e]+i-e*e)/(r-e)/2}while(c<=a[l]&&--l>-1);l++,o[l]=r,a[l]=c,a[l+1]=T}for(let r=0,l=0;r<i;r++){for(;a[l+1]<r;)l++;const i=o[l],c=r-i;e[t+r*n]=s[i]+c*c}}const B=[];function W(e,t,n,i){let s=0;for(let o=t;o<n;o++){const t=e[o];s+=i[t]?.layoutWidth||0}return s}function R(e,t,n,i,s,o){let a=t,r=0;for(let l=t;l<n;l++){const t=W(e,l,l+1,s);r+t>i&&(a<l&&o.push(l),a=l,r=0),r+=t}return r}function D(e,t,n,i,s=0,o){void 0===o&&(o=e.length);const a=[];return"break-all"===t?R(e,s,o,n,i,a):function(e,t,n,i,s,o){let a=t,r=t,l=t,c=0;for(let g=t;g<n;g++)if(" "===e[g]?l=g+1:" "!==e[g+1]&&g+1!==n||(l=g+1),l>r){let t=W(e,r,l,s);c+t>i&&(a<r&&(o.push(r),a=r,c=0),t>i&&(t=R(e,r,l,i,s,o),a=o[o.length-1])),r=l,c+=t}}(e,s,o,n,i,a),a}function H(e,t,n,i,o,a){let r=0,l=0;for(let c=t;c<n;c++){const t=e[c],n=i[t];n?(l||(l=n.layoutHeight),o[c]=r+n.layoutWidth/2,r+=n.layoutWidth):(s.A.warn(`Missing character: ${t} (${t.codePointAt(0)})`)(),o[c]=r,r+=32)}a[0]=r,a[1]=l}class U{constructor(e=5){this._cache={},this._order=[],this.limit=e}get(e){const t=this._cache[e];return t&&(this._deleteOrder(e),this._appendOrder(e)),t}set(e,t){this._cache[e]?(this.delete(e),this._cache[e]=t,this._appendOrder(e)):(Object.keys(this._cache).length===this.limit&&this.delete(this._order[0]),this._cache[e]=t,this._appendOrder(e))}delete(e){this._cache[e]&&(delete this._cache[e],this._deleteOrder(e))}_deleteOrder(e){const t=this._order.indexOf(e);t>=0&&this._order.splice(t,1)}_appendOrder(e){this._order.push(e)}}const N={fontFamily:"Monaco, monospace",fontWeight:"normal",characterSet:function(){const e=[];for(let t=32;t<128;t++)e.push(String.fromCharCode(t));return e}(),fontSize:64,buffer:4,sdf:!1,cutoff:.25,radius:12,smoothing:.1};let j=new U(3);function G(e,t){for(let n=0;n<e.length;n++)t.data[4*n+3]=e[n]}function $(e,t,n,i){e.font=`${i} ${n}px ${t}`,e.fillStyle="#000",e.textBaseline="alphabetic",e.textAlign="left"}class K{constructor(){this.props={...N}}get atlas(){return this._atlas}get mapping(){return this._atlas&&this._atlas.mapping}get scale(){const{fontSize:e,buffer:t}=this.props;return(1.2*e+2*t)/e}setProps(e={}){Object.assign(this.props,e),this._key=this._getKey();const t=function(e,t){let n;n="string"==typeof t?new Set(Array.from(t)):new Set(t);const i=j.get(e);if(!i)return n;for(const s in i.mapping)n.has(s)&&n.delete(s);return n}(this._key,this.props.characterSet),n=j.get(this._key);if(n&&0===t.size)return void(this._atlas!==n&&(this._atlas=n));const i=this._generateFontAtlas(t,n);this._atlas=i,j.set(this._key,i)}_generateFontAtlas(e,t){const{fontFamily:n,fontWeight:i,fontSize:s,buffer:o,sdf:a,radius:r,cutoff:l}=this.props;let c=t&&t.data;c||(c=document.createElement("canvas"),c.width=1024);const g=c.getContext("2d",{willReadFrequently:!0});$(g,n,s,i);const{mapping:f,canvasHeight:h,xOffset:d,yOffset:u}=function({characterSet:e,getFontWidth:t,fontHeight:n,buffer:i,maxCanvasWidth:s,mapping:o={},xOffset:a=0,yOffset:r=0}){let l=0,c=a;const g=n+2*i;for(const h of e)if(!o[h]){const e=t(h);c+e+2*i>s&&(c=0,l++),o[h]={x:c+i,y:r+l*g+i,width:e,height:g,layoutWidth:e,layoutHeight:n},c+=e+2*i}return{mapping:o,xOffset:c,yOffset:r+l*g,canvasHeight:(f=r+(l+1)*g,Math.pow(2,Math.ceil(Math.log2(f))))};var f}({getFontWidth:e=>g.measureText(e).width,fontHeight:1.2*s,buffer:o,characterSet:e,maxCanvasWidth:1024,...t&&{mapping:t.mapping,xOffset:t.xOffset,yOffset:t.yOffset}});if(c.height!==h){const e=g.getImageData(0,0,c.width,c.height);c.height=h,g.putImageData(e,0,0)}if($(g,n,s,i),a){const t=new F({fontSize:s,buffer:o,radius:r,cutoff:l,fontFamily:n,fontWeight:`${i}`});for(const n of e){const{data:e,width:i,height:o,glyphTop:a}=t.draw(n);f[n].width=i,f[n].layoutOffsetY=.9*s-a;const r=g.createImageData(i,o);G(e,r),g.putImageData(r,f[n].x,f[n].y)}}else for(const p of e)g.fillText(p,f[p].x,f[p].y+o+.9*s);return{xOffset:d,yOffset:u,mapping:f,data:c,width:c.width,height:c.height}}_getKey(){const{fontFamily:e,fontWeight:t,fontSize:n,buffer:i,sdf:s,radius:o,cutoff:a}=this.props;return s?`${e} ${t} ${n} ${i} ${o} ${a}`:`${e} ${t} ${n} ${i}`}}const V="uniform textBackgroundUniforms {\n  bool billboard;\n  float sizeScale;\n  float sizeMinPixels;\n  float sizeMaxPixels;\n  vec4 padding;\n  highp int sizeUnits;\n  bool stroked;\n} textBackground;\n",q={name:"textBackground",vs:V,fs:V,uniformTypes:{billboard:"f32",sizeScale:"f32",sizeMinPixels:"f32",sizeMaxPixels:"f32",padding:"vec4<f32>",sizeUnits:"i32",stroked:"f32"}},X={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,padding:{type:"array",value:[0,0,0,0]},getPosition:{type:"accessor",value:e=>e.position},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},getBoundingRect:{type:"accessor",value:[0,0,0,0]},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:[0,0,0,255]},getLineWidth:{type:"accessor",value:1}};class Y extends a.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME text-background-layer-vertex-shader\nin vec2 positions;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceRects;\nin float instanceSizes;\nin float instanceAngles;\nin vec2 instancePixelOffsets;\nin float instanceLineWidths;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin vec3 instancePickingColors;\nout vec4 vFillColor;\nout vec4 vLineColor;\nout float vLineWidth;\nout vec2 uv;\nout vec2 dimensions;\nvec2 rotate_by_angle(vec2 vertex, float angle) {\nfloat angle_radian = radians(angle);\nfloat cos_angle = cos(angle_radian);\nfloat sin_angle = sin(angle_radian);\nmat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\nreturn rotationMatrix * vertex;\n}\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\ngeometry.uv = positions;\ngeometry.pickingColor = instancePickingColors;\nuv = positions;\nvLineWidth = instanceLineWidths;\nfloat sizePixels = clamp(\nproject_size_to_pixel(instanceSizes * textBackground.sizeScale, textBackground.sizeUnits),\ntextBackground.sizeMinPixels, textBackground.sizeMaxPixels\n);\ndimensions = instanceRects.zw * sizePixels + textBackground.padding.xy + textBackground.padding.zw;\nvec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-textBackground.padding.xy, textBackground.padding.zw, positions);\npixelOffset = rotate_by_angle(pixelOffset, instanceAngles);\npixelOffset += instancePixelOffsets;\npixelOffset.y *= -1.0;\nif (textBackground.billboard)  {\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvec3 offset = vec3(pixelOffset, 0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n} else {\nvec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\nDECKGL_FILTER_SIZE(offset_common, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nvFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * layer.opacity);\nDECKGL_FILTER_COLOR(vFillColor, geometry);\nvLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * layer.opacity);\nDECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME text-background-layer-fragment-shader\nprecision highp float;\nin vec4 vFillColor;\nin vec4 vLineColor;\nin float vLineWidth;\nin vec2 uv;\nin vec2 dimensions;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = uv;\nvec2 pixelPosition = uv * dimensions;\nif (textBackground.stroked) {\nfloat distToEdge = min(\nmin(pixelPosition.x, dimensions.x - pixelPosition.x),\nmin(pixelPosition.y, dimensions.y - pixelPosition.y)\n);\nfloat isBorder = smoothedge(distToEdge, vLineWidth);\nfragColor = mix(vFillColor, vLineColor, isBorder);\n} else {\nfragColor = vFillColor;\n}\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[r.A,l.A,q]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instanceRects:{size:4,accessor:"getBoundingRect"},instancePixelOffsets:{size:2,transition:!0,accessor:"getPixelOffset"},instanceFillColors:{size:4,transition:!0,type:"unorm8",accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:4,transition:!0,type:"unorm8",accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState(e){super.updateState(e);const{changeFlags:t}=e;t.extensionsChanged&&(this.state.model?.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll())}draw({uniforms:e}){const{billboard:t,sizeScale:n,sizeUnits:i,sizeMinPixels:s,sizeMaxPixels:o,getLineWidth:a}=this.props;let{padding:r}=this.props;r.length<4&&(r=[r[0],r[1],r[0],r[1]]);const l=this.state.model,g={billboard:t,stroked:Boolean(a),padding:r,sizeUnits:c.p5[i],sizeScale:n,sizeMinPixels:s,sizeMaxPixels:o};l.shaderInputs.setProps({textBackground:g}),l.draw(this.context.renderPass)}_getModel(){return new g.K(this.context.device,{...this.getShaders(),id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new f.V({topology:"triangle-strip",vertexCount:4,attributes:{positions:{size:2,value:new Float32Array([0,0,1,0,0,1,1,1])}}}),isInstanced:!0})}}Y.defaultProps=X,Y.layerName="TextBackgroundLayer";const Z=Y,J={start:1,middle:0,end:-1},Q={top:1,center:0,bottom:-1},ee=[0,0,0,255],te={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,background:!1,getBackgroundColor:{type:"accessor",value:[255,255,255,255]},getBorderColor:{type:"accessor",value:ee},getBorderWidth:{type:"accessor",value:0},backgroundPadding:{type:"array",value:[0,0,0,0]},characterSet:{type:"object",value:N.characterSet},fontFamily:N.fontFamily,fontWeight:N.fontWeight,lineHeight:1,outlineWidth:{type:"number",value:0,min:0},outlineColor:{type:"color",value:ee},fontSettings:{type:"object",value:{},compare:1},wordBreak:"break-word",maxWidth:{type:"number",value:-1},getText:{type:"accessor",value:e=>e.text},getPosition:{type:"accessor",value:e=>e.position},getColor:{type:"accessor",value:ee},getSize:{type:"accessor",value:32},getAngle:{type:"accessor",value:0},getTextAnchor:{type:"accessor",value:"middle"},getAlignmentBaseline:{type:"accessor",value:"center"},getPixelOffset:{type:"accessor",value:[0,0]},backgroundColor:{deprecatedFor:["background","getBackgroundColor"]}};class ne extends i.A{constructor(){super(...arguments),this.getBoundingRect=(e,t)=>{let{size:[n,i]}=this.transformParagraph(e,t);const{fontSize:s}=this.state.fontAtlasManager.props;n/=s,i/=s;const{getTextAnchor:o,getAlignmentBaseline:a}=this.props;return[(J["function"==typeof o?o(e,t):o]-1)*n/2,(Q["function"==typeof a?a(e,t):a]-1)*i/2,n,i]},this.getIconOffsets=(e,t)=>{const{getTextAnchor:n,getAlignmentBaseline:i}=this.props,{x:s,y:o,rowWidth:a,size:[r,l]}=this.transformParagraph(e,t),c=J["function"==typeof n?n(e,t):n],g=Q["function"==typeof i?i(e,t):i],f=s.length,h=new Array(2*f);let d=0;for(let u=0;u<f;u++){const e=(1-c)*(r-a[u])/2;h[d++]=(c-1)*r/2+e+s[u],h[d++]=(g-1)*l/2+o[u]}return h}}initializeState(){this.state={styleVersion:0,fontAtlasManager:new K},this.props.maxWidth>0&&s.A.warn("v8.9 breaking change: TextLayer maxWidth is now relative to text size")()}updateState(e){const{props:t,oldProps:n,changeFlags:i}=e;(i.dataChanged||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getText))&&this._updateText();(this._updateFontAtlas()||t.lineHeight!==n.lineHeight||t.wordBreak!==n.wordBreak||t.maxWidth!==n.maxWidth)&&this.setState({styleVersion:this.state.styleVersion+1})}getPickingInfo({info:e}){return e.object=e.index>=0?this.props.data[e.index]:null,e}_updateFontAtlas(){const{fontSettings:e,fontFamily:t,fontWeight:n}=this.props,{fontAtlasManager:i,characterSet:s}=this.state,o={...e,characterSet:s,fontFamily:t,fontWeight:n};if(!i.mapping)return i.setProps(o),!0;for(const a in o)if(o[a]!==i.props[a])return i.setProps(o),!0;return!1}_updateText(){const{data:e,characterSet:t}=this.props,n=e.attributes?.getText;let i,{getText:s}=this.props,a=e.startIndices;const r="auto"===t&&new Set;if(n&&a){const{texts:t,characterCount:o}=function({value:e,length:t,stride:n,offset:i,startIndices:s,characterSet:o}){const a=e.BYTES_PER_ELEMENT,r=n?n/a:1,l=i?i/a:0,c=s[t]||Math.ceil((e.length-l)/r),g=o&&new Set,f=new Array(t);let h=e;if(r>1||l>0){h=new(0,e.constructor)(c);for(let t=0;t<c;t++)h[t]=e[t*r+l]}for(let d=0;d<t;d++){const e=s[d],t=s[d+1]||c,n=h.subarray(e,t);f[d]=String.fromCodePoint.apply(null,n),g&&n.forEach(g.add,g)}if(g)for(const d of g)o.add(String.fromCodePoint(d));return{texts:f,characterCount:c}}({...ArrayBuffer.isView(n)?{value:n}:n,length:e.length,startIndices:a,characterSet:r});i=o,s=(e,{index:n})=>t[n]}else{const{iterable:t,objectInfo:n}=(0,o.X)(e);a=[0],i=0;for(const e of t){n.index++;const t=Array.from(s(e,n)||"");r&&t.forEach(r.add,r),i+=t.length,a.push(i)}}this.setState({getText:s,startIndices:a,numInstances:i,characterSet:r||t})}transformParagraph(e,t){const{fontAtlasManager:n}=this.state,i=n.mapping,s=this.state.getText,{wordBreak:o,lineHeight:a,maxWidth:r}=this.props;return function(e,t,n,i,s){const o=Array.from(e),a=o.length,r=new Array(a),l=new Array(a),c=new Array(a),g=("break-word"===n||"break-all"===n)&&isFinite(i)&&i>0,f=[0,0],h=[0,0];let d=0,u=0,p=0;for(let x=0;x<=a;x++){const e=o[x];if("\n"!==e&&x!==a||(p=x),p>u){const e=g?D(o,n,i,s,u,p):B;for(let n=0;n<=e.length;n++){const i=0===n?u:e[n-1],a=n<e.length?e[n]:p;H(o,i,a,s,r,h);for(let e=i;e<a;e++){const t=o[e],n=s[t]?.layoutOffsetY||0;l[e]=d+h[1]/2+n,c[e]=h[0]}d+=h[1]*t,f[0]=Math.max(f[0],h[0])}u=p}"\n"===e&&(r[u]=0,l[u]=0,c[u]=0,u++)}return f[1]=d,{x:r,y:l,rowWidth:c,size:f}}(s(e,t)||"",a,o,r*n.props.fontSize,i)}renderLayers(){const{startIndices:e,numInstances:t,getText:n,fontAtlasManager:{scale:i,atlas:s,mapping:o},styleVersion:a}=this.state,{data:r,_dataDiff:l,getPosition:c,getColor:g,getSize:f,getAngle:h,getPixelOffset:d,getBackgroundColor:u,getBorderColor:p,getBorderWidth:x,backgroundPadding:m,background:v,billboard:y,fontSettings:_,outlineWidth:C,outlineColor:P,sizeScale:z,sizeUnits:b,sizeMinPixels:S,sizeMaxPixels:M,transitions:O,updateTriggers:w}=this.props,A=this.getSubLayerClass("characters",L),I=this.getSubLayerClass("background",Z);return[v&&new I({getFillColor:u,getLineColor:p,getLineWidth:x,padding:m,getPosition:c,getSize:f,getAngle:h,getPixelOffset:d,billboard:y,sizeScale:z,sizeUnits:b,sizeMinPixels:S,sizeMaxPixels:M,transitions:O&&{getPosition:O.getPosition,getAngle:O.getAngle,getSize:O.getSize,getFillColor:O.getBackgroundColor,getLineColor:O.getBorderColor,getLineWidth:O.getBorderWidth,getPixelOffset:O.getPixelOffset}},this.getSubLayerProps({id:"background",updateTriggers:{getPosition:w.getPosition,getAngle:w.getAngle,getSize:w.getSize,getFillColor:w.getBackgroundColor,getLineColor:w.getBorderColor,getLineWidth:w.getBorderWidth,getPixelOffset:w.getPixelOffset,getBoundingRect:{getText:w.getText,getTextAnchor:w.getTextAnchor,getAlignmentBaseline:w.getAlignmentBaseline,styleVersion:a}}}),{data:r.attributes&&r.attributes.background?{length:r.length,attributes:r.attributes.background}:r,_dataDiff:l,autoHighlight:!1,getBoundingRect:this.getBoundingRect}),new A({sdf:_.sdf,smoothing:Number.isFinite(_.smoothing)?_.smoothing:N.smoothing,outlineWidth:C/(_.radius||N.radius),outlineColor:P,iconAtlas:s,iconMapping:o,getPosition:c,getColor:g,getSize:f,getAngle:h,getPixelOffset:d,billboard:y,sizeScale:z*i,sizeUnits:b,sizeMinPixels:S*i,sizeMaxPixels:M*i,transitions:O&&{getPosition:O.getPosition,getAngle:O.getAngle,getColor:O.getColor,getSize:O.getSize,getPixelOffset:O.getPixelOffset}},this.getSubLayerProps({id:"characters",updateTriggers:{all:w.getText,getPosition:w.getPosition,getAngle:w.getAngle,getColor:w.getColor,getSize:w.getSize,getPixelOffset:w.getPixelOffset,getIconOffsets:{getTextAnchor:w.getTextAnchor,getAlignmentBaseline:w.getAlignmentBaseline,styleVersion:a}}}),{data:r,_dataDiff:l,startIndices:e,numInstances:t,getIconOffsets:this.getIconOffsets,getIcon:n})]}static set fontAtlasCacheLimit(e){!function(e){s.A.assert(Number.isFinite(e)&&e>=3,"Invalid cache limit"),j=new U(e)}(e)}}ne.defaultProps=te,ne.layerName="TextLayer";const ie=ne}}]);